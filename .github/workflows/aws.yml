# This workflow will build and push a new container image to Amazon ECR,
# and then will deploy a new task definition to Amazon ECS, when a release is created

name: Build and Deploy to Amazon ECS

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]


jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_RUST_SERVER_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_RUST_SERVER_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: rust-server-docker
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: deploy/task-definition.json
        container-name: rust-server-docker
        image: ${{ steps.build-image.outputs.image }}

        #    - name: Fill in the new image ID in the Amazon ECS task definition for test service
        #      id: task-def-test
        #      uses: aws-actions/amazon-ecs-render-task-definition@v1
        #      with:
        #        task-definition: deploy/task-definition-test.json
        #        container-name: rust-server-docker
        #        image: ${{ steps.build-image.outputs.image }}

        #    - name: Deploy Test Amazon ECS task definition
        #      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        #      with:
        #        task-definition: ${{ steps.task-def-test.outputs.task-definition }}
        #        service: rust-server-test-service
        #        cluster: rust-server-test-cluster
        #        wait-for-service-stability: true

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
#        service: rust-server-service
        cluster: rust-server-cluster
        wait-for-service-stability: true

